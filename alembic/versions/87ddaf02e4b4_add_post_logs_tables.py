"""Add post logs tables

Revision ID: 87ddaf02e4b4
Revises: 2bf694e7fceb
Create Date: 2023-06-15 11:05:40.928477

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "87ddaf02e4b4"
down_revision = "2bf694e7fceb"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "light_post_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("time", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("platform_id", sa.String(), nullable=False),
        sa.Column("organisation_id", sa.Integer(), nullable=False),
        sa.Column("website_id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=True),
        sa.Column("light_post_payload", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("filter_post_payload", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("risk_score", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["organisation_id"],
            ["organisations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["website_id"],
            ["websites.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_light_post_logs_organisation_id"), "light_post_logs", ["organisation_id"], unique=False)
    op.create_index(op.f("ix_light_post_logs_platform_id"), "light_post_logs", ["platform_id"], unique=False)
    op.create_index(op.f("ix_light_post_logs_task_id"), "light_post_logs", ["task_id"], unique=False)
    op.create_table(
        "scraped_post_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("time", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("platform_id", sa.String(), nullable=False),
        sa.Column("organisation_id", sa.Integer(), nullable=False),
        sa.Column("website_id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=True),
        sa.Column("post_payload", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(
            ["organisation_id"],
            ["organisations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["website_id"],
            ["websites.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_scraped_post_logs_organisation_id"), "scraped_post_logs", ["organisation_id"], unique=False
    )
    op.create_index(op.f("ix_scraped_post_logs_platform_id"), "scraped_post_logs", ["platform_id"], unique=False)
    op.create_index(op.f("ix_scraped_post_logs_task_id"), "scraped_post_logs", ["task_id"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_scraped_post_logs_task_id"), table_name="scraped_post_logs")
    op.drop_index(op.f("ix_scraped_post_logs_platform_id"), table_name="scraped_post_logs")
    op.drop_index(op.f("ix_scraped_post_logs_organisation_id"), table_name="scraped_post_logs")
    op.drop_table("scraped_post_logs")
    op.drop_index(op.f("ix_light_post_logs_task_id"), table_name="light_post_logs")
    op.drop_index(op.f("ix_light_post_logs_platform_id"), table_name="light_post_logs")
    op.drop_index(op.f("ix_light_post_logs_organisation_id"), table_name="light_post_logs")
    op.drop_table("light_post_logs")
    # ### end Alembic commands ###
